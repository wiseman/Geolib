/*! geolib 1.3.5 by Manuel Bieh
* A growing library to provide some basic geo functions like distance calculation,
* conversion of decimal coordinates to sexagesimal and vice versa, etc.
* WGS 84 (World Geodetic System 1984)
* 
* @author Manuel Bieh
* @url http://www.manuelbieh.com/
* @version 1.3.5
* @license LGPL 
**/!function(a){var b=6378137,c=298.257223563,d=/^([0-9]{1,3})°\s*([0-9]{1,3})'\s*(([0-9]{1,3}(\.([0-9]{1,2}))?)"\s*)?([NEOSW]?)$/,e=-90,f=90,g=-180,h=180,i={decimal:{},sexagesimal:{},distance:0,measures:{m:1,km:.001,cm:100,mm:1e3,mi:1/1609.344,sm:1/1852.216,ft:100/30.48,"in":100/2.54,yd:1/.9144},getKeys:function(a){var b=a.hasOwnProperty("lat")?"lat":"latitude",c=(a.hasOwnProperty("lng")?"lng":!1)||(a.hasOwnProperty("long")?"long":!1)||"longitude",d=(a.hasOwnProperty("alt")?"alt":!1)||(a.hasOwnProperty("altitude")?"altitude":!1)||(a.hasOwnProperty("elev")?"elev":!1)||"elevation";return{latitude:b,longitude:c,elevation:d}},getDistance:function(a,b,c){var d=i.getKeys(a),e=d.latitude,f=d.longitude,g=d.elevation;c=Math.floor(c)||1;var h={},j={};h[e]=i.useDecimal(a[e]),h[f]=i.useDecimal(a[f]),j[e]=i.useDecimal(b[e]),j[f]=i.useDecimal(b[f]);var k,l,m,n,o,p,q,r=6378137,s=6356752.314245,t=1/298.257223563,u=(j[f]-h[f]).toRad(),v=Math.atan((1-t)*Math.tan(parseFloat(h[e]).toRad())),w=Math.atan((1-t)*Math.tan(parseFloat(j[e]).toRad())),x=Math.sin(v),y=Math.cos(v),z=Math.sin(w),A=Math.cos(w),B=u,C=100;do{var D=Math.sin(B),E=Math.cos(B);if(p=Math.sqrt(A*D*A*D+(y*z-x*A*E)*(y*z-x*A*E)),0===p)return i.distance=0;k=x*z+y*A*E,l=Math.atan2(p,k),m=y*A*D/p,n=1-m*m,o=k-2*x*z/n,isNaN(o)&&(o=0);var F=t/16*n*(4+t*(4-3*n));q=B,B=u+(1-F)*t*m*(l+F*p*(o+F*k*(-1+2*o*o)))}while(Math.abs(B-q)>1e-12&&--C>0);if(0===C)return 0/0;var G=n*(r*r-s*s)/(s*s),H=1+G/16384*(4096+G*(-768+G*(320-175*G))),I=G/1024*(256+G*(-128+G*(74-47*G))),J=I*p*(o+I/4*(k*(-1+2*o*o)-I/6*o*(-3+4*p*p)*(-3+4*o*o))),K=s*H*(l-J);if(K=K.toFixed(3),a.hasOwnProperty(g)&&b.hasOwnProperty(g)){var L=Math.abs(a[g]-b[g]);K=Math.sqrt(K*K+L*L)}return i.distance=Math.floor(Math.round(K/c)*c)},getDistanceSimple:function(a,c,d){var e=i.getKeys(a),f=e.latitude,g=e.longitude;d=Math.floor(d)||1;var h={},j={};h[f]=parseFloat(i.useDecimal(a[f])).toRad(),h[g]=parseFloat(i.useDecimal(a[g])).toRad(),j[f]=parseFloat(i.useDecimal(c[f])).toRad(),j[g]=parseFloat(i.useDecimal(c[g])).toRad();var k=Math.round(Math.acos(Math.sin(j[f])*Math.sin(h[f])+Math.cos(j[f])*Math.cos(h[f])*Math.cos(h[g]-j[g]))*b);return i.distance=Math.floor(Math.round(k/d)*d)},getCenter:function(a){if(!a.length)return!1;var b,c,d=i.getKeys(a[0]),e=d.latitude,f=d.longitude,g=function(a){return Math.max.apply(Math,a)},h=function(a){return Math.min.apply(Math,a)},j={lat:[],lng:[]};for(var k in a)j.lat.push(i.useDecimal(a[k][e])),j.lng.push(i.useDecimal(a[k][f]));var l=h(j.lat),m=h(j.lng),n=g(j.lat),o=g(j.lng);b=((l+n)/2).toFixed(6),c=((m+o)/2).toFixed(6);var p=i.convertUnit("km",i.getDistance({lat:l,lng:m},{lat:n,lng:o}));return{latitude:b,longitude:c,distance:p}},getBounds:function(a){if(!a.length)return!1;var b=i.getKeys(a[0]),c=b.latitude,d=b.longitude,e=b.elevation,f=a[0].hasOwnProperty(e),g={maxLat:-1/0,minLat:1/0,maxLng:-1/0,minLng:1/0};f&&(g.maxElev=0,g.minElev=1/0);for(var h=0,j=a.length;j>h;++h)g.maxLat=Math.max(a[h][c],g.maxLat),g.minLat=Math.min(a[h][c],g.minLat),g.maxLng=Math.max(a[h][d],g.maxLng),g.minLng=Math.min(a[h][d],g.minLng),f&&(g.maxElev=Math.max(a[h][e],g.maxElev),g.minElev=Math.min(a[h][e],g.minElev));return g},convertLlatoEcef:function(a){var d=i.getKeys(a),e=i.useDecimal(a[d.latitude]).toRad(),f=i.useDecimal(a[d.longitude]).toRad(),g=a[d.elevation],h=b,j=1/c,k=2*j-j*j,l=Math.sqrt(1-k*Math.pow(Math.sin(e),2)),m=(h/l+g)*Math.cos(e)*Math.cos(f),n=(h/l+g)*Math.cos(e)*Math.sin(f),o=(h*(1-k)/l+g)*Math.sin(e);return[m,n,o]},convertLlaToNed:function(a,b){var c=i.convertLlatoEcef(b),d=c[0],e=c[1],f=c[2],g=i.convertLlatoEcef(a),h=g[0],j=g[1],k=g[2],l=Math.atan2(k,Math.sqrt(h*h+j*j)),m=Math.atan2(j,h),n=-Math.sin(m)*(d-h)+Math.cos(m)*(e-j),o=-Math.sin(l)*Math.cos(m)*(d-h)-Math.sin(l)*Math.sin(m)*(e-j)+Math.cos(l)*(f-k),p=Math.cos(l)*Math.cos(m)*(d-h)+Math.cos(l)*Math.sin(m)*(e-j)+Math.sin(l)*(f-k);return[o,n,-p]},getBoundsOfDistance:function(a,c){var d=i.getKeys(a),j=d.latitude,k=d.longitude,l={};l[j]=i.useDecimal(a[j]),l[k]=i.useDecimal(a[k]);var m,n,o=l[j].toRad(),p=l[k].toRad(),q=c/b,r=o-q,s=o+q,t=f.toRad(),u=e.toRad(),v=h.toRad(),w=g.toRad();if(r>u&&t>s){var x=Math.asin(Math.sin(q)/Math.cos(o));m=p-x,w>m&&(m+=2*Math.PI),n=p+x,n>v&&(n-=2*Math.PI)}else r=Math.max(r,u),s=Math.min(s,t),m=w,n=v;return[{latitude:r.toDeg(),longitude:m.toDeg()},{latitude:s.toDeg(),longitude:n.toDeg()}]},isPointInside:function(a,b){for(var c=i.getKeys(a),d=c.latitude,e=c.longitude,f=!1,g=-1,h=b.length,j=h-1;++g<h;j=g)(b[g][e]<=a[e]&&a[e]<b[j][e]||b[j][e]<=a[e]&&a[e]<b[g][e])&&a[d]<(b[j][d]-b[g][d])*(a[e]-b[g][e])/(b[j][e]-b[g][e])+b[g][d]&&(f=!f);return f},isInside:function(){return i.isPointInside.apply(i,arguments)},isPointInCircle:function(a,b,c){return i.getDistance(a,b)<c},withinRadius:function(){return i.isPointInCircle.apply(i,arguments)},getRhumbLineBearing:function(a,b){var c=i.getKeys(a),d=c.latitude,e=c.longitude,f=i.useDecimal(b[e]).toRad()-i.useDecimal(a[e]).toRad(),g=Math.log(Math.tan(i.useDecimal(b[d]).toRad()/2+Math.PI/4)/Math.tan(i.useDecimal(a[d]).toRad()/2+Math.PI/4));return Math.abs(f)>Math.PI&&(f=f>0?-1*(2*Math.PI-f):2*Math.PI+f),(Math.atan2(f,g).toDeg()+360)%360},getBearing:function(a,b){var c=i.getKeys(a),d=c.latitude,e=c.longitude;b[d]=i.useDecimal(b[d]),b[e]=i.useDecimal(b[e]),a[d]=i.useDecimal(a[d]),a[e]=i.useDecimal(a[e]);var f=(Math.atan2(Math.sin(b[e].toRad()-a[e].toRad())*Math.cos(b[d].toRad()),Math.cos(a[d].toRad())*Math.sin(b[d].toRad())-Math.sin(a[d].toRad())*Math.cos(b[d].toRad())*Math.cos(b[e].toRad()-a[e].toRad())).toDeg()+360)%360;return f},getCompassDirection:function(a,b,c){var d,e;switch(e="circle"==c?i.getBearing(a,b):i.getRhumbLineBearing(a,b),Math.round(e/22.5)){case 1:d={exact:"NNE",rough:"N"};break;case 2:d={exact:"NE",rough:"N"};break;case 3:d={exact:"ENE",rough:"E"};break;case 4:d={exact:"E",rough:"E"};break;case 5:d={exact:"ESE",rough:"E"};break;case 6:d={exact:"SE",rough:"E"};break;case 7:d={exact:"SSE",rough:"S"};break;case 8:d={exact:"S",rough:"S"};break;case 9:d={exact:"SSW",rough:"S"};break;case 10:d={exact:"SW",rough:"S"};break;case 11:d={exact:"WSW",rough:"W"};break;case 12:d={exact:"W",rough:"W"};break;case 13:d={exact:"WNW",rough:"W"};break;case 14:d={exact:"NW",rough:"W"};break;case 15:d={exact:"NNW",rough:"N"};break;default:d={exact:"N",rough:"N"}}return d.bearing=e,d},getDirection:function(){return i.getCompassDirection.apply(i,arguments)},orderByDistance:function(a,b){var c=i.getKeys(a),d=c.latitude,e=c.longitude,f=[];for(var g in b){var h=i.getDistance(a,b[g]);f.push({key:g,latitude:b[g][d],longitude:b[g][e],distance:h})}return f.sort(function(a,b){return a.distance-b.distance})},findNearest:function(a,b,c){c=c||0;var d=i.orderByDistance(a,b);return d[c]},getPathLength:function(a){for(var b,c=0,d=0,e=a.length;e>d;++d)b&&(c+=i.getDistance(a[d],b)),b=a[d];return c},getSpeed:function(a,b,c){var d=c&&c.unit||"km";"mph"==d?d="mi":"kmh"==d&&(d="km");var e=i.getDistance(a,b),f=1*b.time/1e3-1*a.time/1e3,g=e/f*3600,h=Math.round(g*i.measures[d]*1e4)/1e4;return h},convertUnit:function(a,b,c){if(0===b||"undefined"==typeof b){if(0===i.distance)return 0;b=i.distance}if(a=a||"m",c=null==c?4:c,"undefined"!=typeof i.measures[a])return i.round(b*i.measures[a],c);throw new Error("Unknown unit for conversion.")},useDecimal:function(a){if(a=a.toString().replace(/\s*/,""),isNaN(parseFloat(a))||parseFloat(a)!=a){if(i.isSexagesimal(a)===!0)return parseFloat(i.sexagesimal2decimal(a));throw"Unknown format."}return parseFloat(a)},decimal2sexagesimal:function(a){if(a in i.sexagesimal)return i.sexagesimal[a];var b=a.toString().split("."),c=Math.abs(b[0]),d=60*("0."+b[1]),e=d.toString().split(".");return d=Math.floor(d),e=(60*("0."+e[1])).toFixed(2),i.sexagesimal[a]=c+"° "+d+"' "+e+'"',i.sexagesimal[a]},sexagesimal2decimal:function(a){if(a in i.decimal)return i.decimal[a];var b=new RegExp(d),c=b.exec(a),e=0,f=0;c&&(e=parseFloat(c[2]/60),f=parseFloat(c[4]/3600)||0);var g=(parseFloat(c[1])+e+f).toFixed(8);return g="S"==c[7]||"W"==c[7]?-1*g:g,i.decimal[a]=g,g},isSexagesimal:function(a){return d.test(a)},round:function(a,b){var c=Math.pow(10,b);return Math.round(a*c)/c}};i.getElevation=function(){"undefined"!=typeof window.navigator?i.getElevationClient.apply(this,arguments):i.getElevationServer.apply(this,arguments)},i.getElevationClient=function(a,b){if(!window.google)throw new Error("Google maps api not loaded");if(0===a.length)return b(null,null);if(1===a.length)return b(new Error("getElevation requires at least 2 points."));for(var c=[],d=i.getKeys(a[0]),e=d.latitude,f=d.longitude,g=0;g<a.length;g++)c.push(new google.maps.LatLng(i.useDecimal(a[g][e]),i.useDecimal(a[g][f])));var h={path:c,samples:c.length},j=new google.maps.ElevationService;j.getElevationAlongPath(h,function(c,e){i.elevationHandler(c,e,a,d,b)})},i.getElevationServer=function(a,b){if(0===a.length)return b(null,null);if(1===a.length)return b(new Error("getElevation requires at least 2 points."));for(var c=require("googlemaps"),d=[],e=i.getKeys(a[0]),f=e.latitude,g=e.longitude,h=0;h<a.length;h++)d.push(i.useDecimal(a[h][f])+","+i.useDecimal(a[h][g]));c.elevationFromPath(d.join("|"),d.length,function(c,d){i.elevationHandler(d.results,d.status,a,e,b)})},i.elevationHandler=function(a,b,c,d,e){var f=[],g=d.latitude,h=d.longitude;if("OK"==b){for(var i=0;i<a.length;i++)f.push({lat:c[i][g],lng:c[i][h],elev:a[i].elevation});e(null,f)}else e(new Error("Could not get elevation using Google's API"),elevationResult.status)},i.getGrade=function(a){var b=i.getKeys(a[0]),c=b.elevation,d=Math.abs(a[a.length-1][c]-a[0][c]),e=i.getPathLength(a);return Math.floor(d/e*100)},i.getTotalElevationGainAndLoss=function(a){for(var b=i.getKeys(a[0]),c=b.elevation,d=0,e=0,f=0;f<a.length-1;f++){var g=a[f][c]-a[f+1][c];g>0?e+=g:d+=Math.abs(g)}return{gain:d,loss:e}},"undefined"==typeof Number.prototype.toRad&&(Number.prototype.toRad=function(){return this*Math.PI/180}),"undefined"==typeof Number.prototype.toDeg&&(Number.prototype.toDeg=function(){return 180*this/Math.PI}),"undefined"!=typeof module?a.geolib=module.exports=i:"function"==typeof define&&define.amd?define("geolib",[],function(){return i}):a.geolib=i}(this);